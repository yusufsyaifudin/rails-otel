version: '3.8'

services:
  myapp:
    container_name: myapp
    build:
      dockerfile: development.Dockerfile
    restart: always
    command: bundle exec rails s -p 3000 -b '0.0.0.0'
    ports:
      - "3000:3000"
    volumes:
      - ./:/myapp
    depends_on:
      - postgres
      - jaeger
    environment:
      DATABASE_USERNAME: root
      DATABASE_PASSWORD: password
      DATABASE_DB_NAME: rails_otel_dev
      PROGRAM_NAME: 'rails-otel'
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318 # via HTTP

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - POSTGRES_INITDB_ARGS="--data-checksums"
    volumes:
      - ./docker-data/postgres:/var/lib/postgresql/data
      - ./docker-postgres-init.sql:/docker-entrypoint-initdb.d/docker-postgres-init.sql:ro

  jaeger:
    image: jaegertracing/all-in-one:1
    container_name: jaeger
    restart: always
    command:
      - '--collector.otlp.enabled=true'
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686" # dashboard
      - "14268:14268" # Accepts spans directly from clients in jaeger.thrift format with binary thrift protocol (POST to /api/traces). Also serves sampling policies at /api/sampling, similar to Agentâ€™s port 5778.
      - "9411:9411" # Accepts Zipkin spans in Thrift, JSON and Proto (disabled by default).
      - "14269:14269" # Admin port: health check at / and metrics at /metrics.
      - "14317:4317" # gRPC Accepts traces in OpenTelemetry OTLP format if --collector.otlp.enabled=true.
      - "14318:4318" # HTTP Accepts traces in OpenTelemetry OTLP format if --collector.otlp.enabled=true.
      - "14250:14250" # Used by jaeger-agent to send spans in model.proto format.

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector:0.69.0
    container_name: otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml:ro
      - ./docker-data/otel-collector/log:/tmp/log
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus' metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
